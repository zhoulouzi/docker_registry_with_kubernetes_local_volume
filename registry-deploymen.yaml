apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: docker-registry
          image: "registry:2.6.2"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              # scheme: HTTPS
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              # scheme: HTTPS
              path: /
              port: 5000
          resources: {}
          env:
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: docker-registry-secret
                  key: haSharedSecret
            # - name: REGISTRY_HTTP_TLS_CERTIFICATE
            #   value: /etc/ssl/docker/tls.crt
            # - name: REGISTRY_HTTP_TLS_KEY
            #   value: /etc/ssl/docker/tls.key
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: auth
              mountPath: /auth
              readOnly: true
            - name: data
              mountPath: /var/lib/registry/
            - name: "docker-registry-config"
              mountPath: "/etc/docker/registry"
            # - mountPath: /etc/ssl/docker
            #   name: tls-cert
            #   readOnly: true
      volumes:
        - name: auth
          secret:
            secretName: docker-registry-secret
            items:
            - key: htpasswd
              path: htpasswd
        - name: data
          persistentVolumeClaim:
            claimName: docker-registry
        - name: docker-registry-config
          configMap:
            name: docker-registry-config
        # - name: tls-cert
        #   secret:
        #     secretName: {{ .Values.tlsSecretName }}

